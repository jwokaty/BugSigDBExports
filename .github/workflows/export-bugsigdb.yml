on:
  schedule:
    - cron: "55 * * * *" # UTC Time
  workflow_dispatch:

name: Export BugSigDB

jobs:
  export-bugsigdb:
    runs-on: ubuntu-latest
    container: bioconductor/bioconductor_docker:RELEASE_3_19

    steps:

      - name: Checkout BugSigDBExports
        uses: actions/checkout@v3
        with:
          path: BugSigDBExports

      - name: Install BugSigDBExports dependencies
        run: |
          Rscript -e "install.packages(c('rvest', 'readr', 'plyr', 'BiocFileCache', 'R.utils', 'glue'))"

      - name: Install bugsigdbr 
        run: |
          Rscript -e "BiocManager::install('bugsigdbr')"

      - name: Setup git config
        run: |
          cd $GITHUB_WORKSPACE/BugSigDBExports # Because we need to be in a repository
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Export BugSigDB
        run: |
          BUGSIGDB_TIMESTAMP="$(date -u +%Y-%m-%d_%H:%M_UTC)"
          echo "BUGSIGDB_TIMESTAMP=$BUGSIGDB_TIMESTAMP" >> $GITHUB_ENV
          echo $BUGSIGDB_TIMESTAMP
          Rscript $GITHUB_WORKSPACE/BugSigDBExports/inst/scripts/dump_release.R $BUGSIGDB_TIMESTAMP $GITHUB_WORKSPACE/BugSigDBExports
          mv *csv $GITHUB_WORKSPACE/BugSigDBExports
        timeout-minutes: 10

      - name: Track file growth
        run: |
          library(R.utils)
          github_workspace <- Sys.getenv("GITHUB_WORKSPACE")
          setwd(file.path(github_workspace, "BugSigDBExports"))
          bugsigdb_timestamp <- Sys.getenv("BUGSIGDB_TIMESTAMP")
          number_of_lines <- c("timestamp" = bugsigdb_timestamp)
          files <- sort(list.files(pattern=".(csv|gmt)"))
          files <- files[files != "file_size.csv"]
          for (a_file in files) {
              number_of_lines[a_file] <- countLines(a_file)[1]
          }
          write.table(as.matrix(t(number_of_lines)),
                      "file_size.csv",
                      append = TRUE,
                      col.names = FALSE,
                      row.names = FALSE)
        shell: Rscript {0}

      - name: Report file problems
        run: |
          library(glue)
          github_workspace <- Sys.getenv("GITHUB_WORKSPACE")
          setwd(file.path(github_workspace, "BugSigDBExports"))
          file_size <- read.csv("file_size.csv", header = TRUE)
          num_of_rows <- dim(file_size)[1]
          print(glue("Number of rows: {num_of_rows}"))
          if (num_of_rows > 2) {
              last <- file_size[num_of_rows, ]
              second_last <- file_size[num_of_rows - 1, ]
              print(last)
              print(second_last)
              sig_diff <-
                  as.integer(last$sig.csv) - as.integer(second_last$sig.csv)
              exp_diff <-
                  as.integer(last$exp.csv) - as.integer(second_last$exp.csv)
              stu_diff <-
                  as.integer(last$stu.csv) - as.integer(second_last$stu.csv)
              print(glue("sig: {sig_diff}, exp: {exp_diff}, stu: {stu_diff}"))
              if (sig_diff > 10 || exp_diff > 10 || stud_diff > 10) {
                  system2(c("echo", glue("'SIG_DIFF={sig_diff}'"),
                            ">>", "$GITHUB_ENV"))
                  system2(c("echo", glue("'EXP_DIFF={exp_diff}'"),
                            ">>", "$GITHUB_ENV"))
                  system2(c("echo", glue("'STU_DIFF={stu_diff}'"),
                            ">>", "$GITHUB_ENV"))
              }
        shell: Rscript {0}

      - name: Check values
        run: |
          cd $GITHUB_WORKSPACE/BugSigDBExports
          echo $GITHUB_ENV

      #- name: Post to a Slack channel
      #  id: slack
      #  uses: slackapi/slack-github-action@v1.27.0
      #  with:
      #    channel-id: 'gha-nofications'
      #    # For posting a simple plain text message
      #    slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #  env:
      #    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Commit Exports
        run: |
          cd $GITHUB_WORKSPACE/BugSigDBExports
          for export in `find . -type f -iname \*.gmt -o -iname \*.csv`
          do
            export=$(echo $export | sed 's/\.\///g')
            git_diff=$(git diff --numstat $export | sed -e 's/\t//g')
            if [ "$git_diff" = "11$export" -o "$git_diff" = "" ]; then
                echo "No changes to commit for $export"
            else
                echo "Add changes for $export"
                git add $export
            fi
          done
          echo "Check if any file contents have added to the index"
          has_updates=$(git diff --cached --shortstat)
          if [ -n "$has_updates" ]; then
            git add file_size.csv
            git commit -m "Hourly export update"
            git push origin devel
          else
            echo "No content changes to commit"
          fi
